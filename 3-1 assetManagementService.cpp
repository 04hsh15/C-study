#include <iostream>
using namespace std;

void total(int* p_total, int* p_bank) {
	//total라는 이름의 함수 선언 및 매개변수로 int형 변수와 배열이 들어갈 것이기 때문에 자료형으로 int* 줌
	
	for (int i = 0; i < 4; i++) { //배열에 들어있는 금액을 합하기 위한 반복문
		*p_total += *(p_bank + i); //*p_total로 값에 접근해서 배열에 담긴 합을 더해줌
		//*(a + i)는 포인터 변수 a가 가리키는 배열의 i만큼 떨어진 원소에 접근하기 위함 
	}
}

void myaccounts(int* b) {
	//myaccounts라는 이름의 함수 선언 및 매개변수로 int형 배열이 들어갈 것이기 때문에 자료형으로 int* 줌
	for (int i = 0; i < 4; i++) { //배열에 들어있는 금액을 출력하기 위한 반복문
		if (*(b + i) == 0) { //현재 접근한 원소의 값이 0이면 그 값이 아닌 계좌 없음을 출력하기 위함
			//*(b + i)는 포인터 변수 b가 가리키는 배열의 i만큼 떨어진 원소에 접근하기 위함 
			cout << "  " << "계좌 없음  |";
		}
		else { //현재 접근한 원소의 값이 0이 아니면 그 값을 출력하기 위함
			cout << "     " << *(b + 1) << "    |";

		}
	}
}

int main() {
	char bank_name[5][5] = { "하나", "우리", "신한", "국민" };
	//은행명이 들어있는 문자형 배열 선언. 문자형은 공백까지 고려하여 원래보다 크기를 +1 해줘야 함
	//한글은 한 글자당 2바이트를 차지하므로 4+1해서 5, 총 원소의 개수가 4개이므로 4+1해서 5
	int bank[4] = { 5000, 4000, 0, 10 }; //해당 은행 계좌의 금액이 들어있는 정수형 배열 선언
	int total_money = 0; //모든 계좌의 금액 합을 저장할 변수 선언

	total(&total_money, bank); //금액 합을 저장할 변수에 total함수를 실행시켜 반환한 값을 저장함

	cout << "*******************SWING 자산관리 서비스*******************" << endl;
	cout << "=====================은행 별 계좌 정보=====================" << endl;
	for (int i = 0; i < 4; i++) { //배열에 들어있는 은행명을 출력하기 위한 반복문
		cout << "     " << bank_name[i] << "    |";
	}
	cout << endl;
	myaccounts(bank); //myaccounts 함수를 실행시켜 bank 배열에 들어있는 금액을 출력함
	cout << endl << "현재 SWING 자산관리 서비스에 등록된 회원님의 총 자산은 " << total_money << "원 입니다." << endl;
	cout << "***********************************************************";
}